CREATE TABLE app_user (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(100),
	email VARCHAR(50),
	phone_number CHAR(10),
	PRIMARY KEY (id),
    CONSTRAINT unq_email UNIQUE (email),
    CONSTRAINT chk_email CHECK (email::text ~ '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
    CONSTRAINT chk_phone CHECK (phone_number !~~ '%[^0-9]%'::text));

CREATE TYPE valid_role AS ENUM ('manager', 'employee', 'supervisor');
CREATE TABLE restaurant(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(100) NOT NULL,
	PRIMARY KEY (id));
	
CREATE TABLE role (
	user_id INTEGER NOT NULL,
	r_id INTEGER NOT NULL,
	role valid_role NOT NULL,
	PRIMARY KEY (user_id, r_id),
	FOREIGN KEY (user_id) REFERENCES app_user(id),
	FOREIGN KEY (r_id) REFERENCES restaurant(id));
	

	
CREATE TABLE task(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(30) NOT NULL,
	r_id INTEGER NOT NULL,
	description VARCHAR(250),
	estimated_time TIME,
	PRIMARY KEY (id),
	FOREIGN KEY (r_id) REFERENCES restaurant(id));
	
CREATE TABLE day_report(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	r_id INTEGER NOT NULL,
	report_date DATE,
	comments VARCHAR(350),
	PRIMARY KEY (id),
	FOREIGN KEY (r_id) REFERENCES restaurant(id));	
	
CREATE TABLE completed_task(
	date_completed TIMESTAMP NOT NULL,
	user_id INTEGER NOT NULL,
	task_id INTEGER NOT NULL,
	rating INTEGER,
	comment VARCHAR(250),
	completed_time TIME,
	report_id INTEGER NOT NULL,
	PRIMARY KEY (task_id, report_id),
	FOREIGN KEY (user_id) REFERENCES app_user(id),
	FOREIGN KEY (task_id) REFERENCES task(id),
	FOREIGN KEY (report_id) REFERENCES day_report(id)
	);

